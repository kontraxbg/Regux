<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" />
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" />
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" />
      <section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" />
    </sectionGroup>
  </configSections>
  <!-- Координатите на базата данни са във външен config файл, за да не се публикуват в GitHub. Той е различен за всяка publish конфигурация. -->
  <connectionStrings configSource="Config\PrivateConnectionStrings.config">
    <!-- DefaultConnection и ReguxEntities трябва да имат НАПЪЛНО еднакви connection string-ове, включително главни/малки букви,
      за да може ASP.NET Identity и Entity Framework операции да работят в един TransactionScope. -->
    <!--<add name="DefaultConnection" connectionString="Data Source=*****;Initial Catalog=Regux;Persist Security Info=True;User Id=***;Password=******;MultipleActiveResultSets=True" providerName="System.Data.SqlClient" />
    <add name="ReguxEntities" connectionString="metadata=res://*/Regux.csdl|res://*/Regux.ssdl|res://*/Regux.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=*****;Initial Catalog=Regux;Persist Security Info=True;User Id=***;Password=*****;MultipleActiveResultSets=True&quot;" providerName="System.Data.EntityClient" />-->
  </connectionStrings>
  <appSettings>
    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="elmah.mvc.disableHandler" value="false" />
    <add key="elmah.mvc.disableHandleErrorFilter" value="false" />
    <add key="elmah.mvc.requiresAuthentication" value="false" />
    <add key="elmah.mvc.IgnoreDefaultRoute" value="false" />
    <add key="elmah.mvc.allowedRoles" value="*" />
    <add key="elmah.mvc.allowedUsers" value="*" />
    <add key="elmah.mvc.route" value="elmah" />
    <add key="elmah.mvc.UserAuthCaseSensitive" value="true" />
    <add key="DevModeEnabled" value="True" />
    <add key="RegiXAdaptersPath" value="\\files\Documents\Projects\Execution\2018-04-15 МС - удостоверения\RegiX\Adapters\От regixaisweb.egov.bg" />
    <add key="IisdaLogEnabled" value="True" />
    <add key="IisdaLogDirectory" value="C:\ReguxLog" />
    <add key="RegiXLogEnabled" value="True" />
    <add key="RegiXLogDirectory" value="C:\ReguxLog" />
    <!-- Изключва валидирането на SSL сертификатите на останалите системи, с които си комуникира тази.
      Трябва да се използва само за тестови цели преди необходимите издатели да се инсталират в Trusted Root CAs. -->
    <add key="DisableServerCertificateValidation" value="False" />
  </appSettings>
  <system.net>
    <mailSettings>
      <smtp deliveryMethod="Network" from="regux@kontrax.bg">
        <network host="email.kontrax.bg" />
      </smtp>
    </mailSettings>
  </system.net>
  <!-- Конфигурацията за извикване на RegiX е копирана от тук:
    http://regixaisweb.egov.bg/RegiXInfo/RegiXGuides/#!Documents/endpoint.htm
    http://regixaisweb.egov.bg/RegiXInfo/RegiXGuides/#!Documents/token.htm -->
  <!-- Част от конфигурацията за извикване на еАвт от информационна система е копирана от тук:
    http://regixaisweb.egov.bg/RegiXInfo/RegiXGuides/#!Documents/securetokenservice.htm -->
  <system.serviceModel>
    <bindings>
      <customBinding>
        <!-- е-Автентикатор -->
        <binding name="STS_Binding">
          <textMessageEncoding messageVersion="Soap11WSAddressing10" />
          <security authenticationMode="MutualCertificateDuplex" messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" defaultAlgorithmSuite="Basic128" includeTimestamp="true" keyEntropyMode="CombinedEntropy" protectTokens="false" securityHeaderLayout="Lax" messageProtectionOrder="SignBeforeEncrypt" requireSignatureConfirmation="false" allowSerializedSigningTokenOnReply="true">
          </security>
          <httpsTransport requireClientCertificate="false" />
        </binding>
      </customBinding>
      <wsHttpBinding>
        <!-- RegiX -->
        <binding name="WSHttpBinding_IRegiXEntryPoint" maxReceivedMessageSize="10000000">
          <security mode="Transport">
            <transport clientCredentialType="Certificate" />
            <!--<transport clientCredentialType="None" />-->
          </security>
        </binding>
        <!-- ИИСДА -->
        <binding name="WSHttpBinding_IBatchInfoService" maxReceivedMessageSize="10000000">
          <security mode="Transport">
            <transport clientCredentialType="None" />
          </security>
        </binding>
      </wsHttpBinding>
      <basicHttpBinding>
        <!-- ИИСДА -->
        <!-- Отговорът на SearchAdmServices() за администрация с ИИСДА № 496 е 144 MB, затова ограничението е 200 MB. -->
        <binding name="BasicHttpsBinding_IAdmServicesService" maxReceivedMessageSize="200000000" sendTimeout="01:00:00">
          <security mode="Transport" />
        </binding>
      </basicHttpBinding>
    </bindings>
    <extensions>
      <!-- RegiX -->
      <behaviorExtensions>
        <add name="eAuthBehaviorExtension" type="Kontrax.Regux.RegiXClient.EAuth.EAuthEndpointBehavior, Kontrax.Regux.RegiXClient" />
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <endpointBehaviors>
        <!-- е-Автентикатор -->
        <behavior name="eAuthMutualCertificates">
          <clientCredentials>
            <serviceCertificate>
              <!-- Сертификат, използван от STS услугата. Файл "bg-egov-eauth-sts-server.cer", CN=sts.egov.bg.
                Трябва също издателят на горния сертификат "BulSi Root.cer" да бъде инсталиран в Trusted Root CAs. -->
              <defaultCertificate x509FindType="FindByThumbprint" storeLocation="LocalMachine" storeName="TrustedPeople" findValue="1268253194998289acdad9c9ae42cd151e430fdb" />
              <!-- Два вида настройки срещу следната грешка:
                "The X.509 certificate E=certificates@bul-si.bg, CN=sts.egov.bg, OU=sts, O=egov, L=Sofia, S=Sofia-grad, C=BG
                chain building failed. The certificate that was used has a trust chain that cannot be verified.
                Replace the certificate or change the certificateValidationMode" с продължение...
              1. ... "The revocation function was unable to check revocation for the certificate."
                По подразбиране се ползва режим "Online". Режим "Offline" води до същата грешка, затова revocation проверките се изключват.-->
              <authentication revocationMode="NoCheck" />
              <!-- 2. ... "A certificate chain could not be built to a trusted root authority."
                Необходимо е само ако "BulSi Root.cer" не е инсталиран в Trusted Root CAs.
                В този случай обаче трябва да се включи и appSetting-ът "DisableServerCertificateValidation".
                Ако не се направи, грешката се променя на "The remote certificate is invalid according to the validation procedure...
                Could not establish trust relationship for the SSL/TLS secure channel with authority 'sts.egov.bg:9443'."
                По подразбиране се ползва режим "ChainTrust", което се доверява само на сертификати с издател в Trusted Root CAs.
                Режим "PeerTrust" означава да се доверява само на сертификати в Trusted People. Режим "PeerOrChainTrust" се доверява и на двата вида. -->
              <!--<authentication certificateValidationMode="PeerOrChainTrust" revocationMode="NoCheck" />-->
            </serviceCertificate>
            <!-- Сертификат за идентифициране на тази система пред STS услугата: regux.egov.bg -->
            <clientCertificate x509FindType="FindByThumbprint" storeLocation="LocalMachine" storeName="My" findValue="580367b27a564276d0b17e513461c50da3fd5778" />
          </clientCredentials>
        </behavior>
        <!-- RegiX -->
        <behavior name="RegiXClientCertificateWithEAuth">
          <clientCredentials>
            <!-- Сертификат за идентифициране на тази система пред RegiX: За тестова среда iistest.kontrax.bg -->
            <clientCertificate x509FindType="FindByThumbprint" storeLocation="LocalMachine" storeName="My" findValue="6d351a75bc632cfe62ec413af708b81dce3b84cf" />
          </clientCredentials>
          <eAuthBehaviorExtension />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <client>
      <!-- е-Автентикатор -->
      <endpoint address="https://sts.egov.bg:9443/egov-sts/jaxws-sts/sts" behaviorConfiguration="eAuthMutualCertificates" binding="customBinding" bindingConfiguration="STS_Binding" contract="System.ServiceModel.Security.IWSTrustChannelContract" name="eAuthSts">
        <identity>
          <dns value="sts.egov.bg" />
        </identity>
      </endpoint>
      <!-- RegiX -->
      <!-- Адрес на тестовата среда: https://regix-service-test.egov.bg/RegiX/RegiXEntryPoint.svc -->
      <!-- Адрес на реалната среда: https://regix-service.egov.bg/RegiX/RegiXEntryPoint.svc -->
      <endpoint address="https://regix-service-test.egov.bg/RegiX/RegiXEntryPoint.svc" behaviorConfiguration="RegiXClientCertificateWithEAuth" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IRegiXEntryPoint" contract="RegiXServiceReference.IRegiXEntryPoint" name="WSHttpBinding_IRegiXEntryPoint" />
      <!-- ИИСДА -->
      <endpoint address="https://iisda.government.bg/Services/RAS/RAS.Integration.Host/BatchInfoService.svc" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IBatchInfoService" contract="BatchInfoServiceReference.IBatchInfoService" name="WSHttpBinding_IBatchInfoService" />
      <endpoint address="https://iisda.government.bg/Services/AdmServices/AdministrativeServices.IntegrationServices/AdmServicesService/AdmServicesService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpsBinding_IAdmServicesService" contract="AdmServicesServiceReference.IAdmServicesService" name="BasicHttpsBinding_IAdmServicesService" />
    </client>
    <!-- WCF Debug
    <diagnostics>
      <messageLogging
        logEntireMessage="true"
        logMalformedMessages="true"
        logMessagesAtServiceLevel="true"
        logMessagesAtTransportLevel="false"
        maxMessagesToLog="3000"
        maxSizeOfMessageToLog="10000000"/>
    </diagnostics>-->
  </system.serviceModel>
  <!-- WCF Debug: use SvcTraceViewer.exe
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Information, ActivityTracing" propagateActivity="true" ><listeners><add name="xml"/></listeners></source>
      <source name="System.ServiceModel.MessageLogging"><listeners><add name="xml"/></listeners></source>
    </sources>
    <sharedListeners>
      <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="D:\Error.svclog" />
    </sharedListeners>
  </system.diagnostics>-->
  <system.web>
    <globalization uiCulture="bg-BG" culture="bg-BG" enableClientBasedCulture="false" />
    <httpCookies httpOnlyCookies="true" requireSSL="true" />
    <authentication mode="None" />
    <customErrors mode="Off" />
    <compilation debug="true" targetFramework="4.6.1" />
    <!-- SECURE: Don't disclose version header in each IIS response, encode ALL output including CSS, JavaScript etc, reduce max request length as mitigation against DOS -->
    <!--encoderType="Microsoft.Security.Application.AntiXssEncoder, AntiXssLibrary"-->
    <httpRuntime targetFramework="4.6.1" enableVersionHeader="false" maxRequestLength="4096" />
  </system.web>
  <system.webServer>
    <httpProtocol>
      <customHeaders>
        <!-- SECURE: Remove server information disclosure -->
        <remove name="X-Powered-By" />
      </customHeaders>
    </httpProtocol>
    <modules>
      <remove name="FormsAuthentication" />
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" preCondition="managedHandler" />
      <add name="BundleModule" type="System.Web.Optimization.BundleModule" />
      <!-- SECURE: Adds in headers to prevent iFrames and in production for site ever being sent outside of SSL -->
      <add name="HttpHeaders" type="Kontrax.Regux.Shared.Portal.Core.HttpHeaders" />
    </modules>
    <handlers>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
    <validation validateIntegratedModeConfiguration="false" />
    <staticContent>
      <mimeMap fileExtension="woff" mimeType="application/font-woff" />
      <mimeMap fileExtension="woff2" mimeType="application/font-woff" />
    </staticContent>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.OAuth" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.Cookies" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" culture="neutral" publicKeyToken="30ad4fe6b2a6aeed" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Diagnostics.DiagnosticSource" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.2.1" newVersion="4.0.2.1" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DocumentFormat.OpenXml" publicKeyToken="8fb06cb64d019a17" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.8.1.0" newVersion="2.8.1.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <elmah>
    <security allowRemoteAccess="true" />
    <errorLog type="Elmah.SqlErrorLog, Elmah" connectionStringName="DefaultConnection" />
  </elmah>
  <location path="Certificate">
     <system.webServer>
        <security>
           <access sslFlags="Ssl, SslNegotiateCert, SslRequireCert" />
        </security>
     </system.webServer>
  </location>
</configuration>