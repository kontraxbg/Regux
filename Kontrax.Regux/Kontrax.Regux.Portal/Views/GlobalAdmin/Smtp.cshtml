@model Kontrax.Regux.Portal.Controllers.GlobalAdminController.SmtpEditModel

@{
    ViewBag.Title = "Изпращане на електронна поща";
}

@section Subtitle {
    @Html.ActionLink("Назад към администриране", "Index", "Admin")
}

<div class="panel panel-info">
    <div class="panel-heading"></div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            // Chrome не уважава настройката autocomplete="off", нито на полетата, нито на формата.
            // Тези полета отвличат вниманието на Chrome (autocomplete-ването) от истинските полета за име и парола по-долу.
            // Конкретните имена на 4-те полета не оказват влияние. Това не работи ако dummy полетата са скрити, затова се крият заобиколно.
            <div class="" style="width: 0; height: 0; overflow: hidden">
                <input autocomplete="off" name="Dummy1" value="" style="" />
                <input type="password" autocomplete="off" name="Dummy2" value="" style="" />
            </div>

            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Host, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Host, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Host)
                    </div>
                    @Html.LabelFor(model => model.Port, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Port, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Port)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.UserName)
                    </div>
                    @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Password)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EnableSsl, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.EnableSsl, new SelectListItem[]
                        {
                            new SelectListItem { Value = bool.TrueString, Text = "Да" },
                            new SelectListItem { Value = bool.FalseString, Text = "Не" }
                        }, "---", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EnableSsl)
                    </div>
                    @Html.LabelFor(model => model.FromEmail, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.FromEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FromEmail)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <input type="submit" value="Запис" class="btn btn-primary col-md-12" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
