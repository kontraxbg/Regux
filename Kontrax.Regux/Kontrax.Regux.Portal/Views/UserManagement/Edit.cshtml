@model Kontrax.Regux.Model.UserManagement.UserEditModel

@{
    ViewBag.Title = "Редактиране на служител";
}

@section Subtitle {
    @Html.ActionLink("Назад към списъка със служители", "Index")
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="panel panel-info">
        <div class="panel-heading"></div>
        <div class="panel-body">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName)
                    </div>
                    @Html.LabelFor(model => model.PersonName, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.PersonName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PersonName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                    @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.NewPassword, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NewPassword)
                    </div>
                    @Html.LabelFor(model => model.IsGlobalAdmin, new { @class = "control-label col-md-5" })
                    <div class="col-md-1">
                        @if (Model.CurrentUser.IsGlobalAdmin)
                        {
                            @Html.EditorFor(model => model.IsGlobalAdmin, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IsGlobalAdmin)
                        }
                        else
                        {
                            @Html.HiddenFor(model => model.IsGlobalAdmin)
                            @Html.EditorFor(model => model.IsGlobalAdmin, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-heading"></div>
        <div class="panel-body">
            <div class="form-horizontal">
                @for (int i = 0; i < Model.UserLocalRoles.Count; i++)
                {
                    @Html.EditorFor(model => model.UserLocalRoles[i])
                }
                @* Ако избраният потребител вече работи във всички администрации, за които текущият потребител има права,
                    то списъкът за избор е празен и няма смисъл да се показва. *@
                @if (Model.NewLocalRole.Administrations.Any())
                {
                    @Html.EditorFor(model => model.NewLocalRole)
                }
                <div class="row">
                    <div class="col-md-3">
                        <button type="submit" class="btn btn-primary col-md-12">Запис</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("IssueCertificate", null, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <input type="hidden" value="@Model.Id" name="userId" />
    <div class="panel panel-info">
        <div class="panel-heading clearfix">
            <div class="panel-title pull-left">
                Данни за потребителски сертификат
            </div>
            @if (Model.Certificate != null)
            {
            <div class="pull-right">
                <a href="@Url.Action("DownloadCertificateAsync", new { id = Model.Id })" class="btn btn-default"><span class="glyphicon glyphicon-certificate"></span> Изтегли</a>
            </div>
            }
        </div>
        <div class="panel-body">
            <div class="form-horizontal">
                @Html.DisplayFor(model => model.Certificate)
                <hr/>
                <div class="form-group row">
                    @Html.LabelFor(model => model.UserLocalRoles.First().AdministrationId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("AdministrationID", new SelectList(Model.UserLocalRoles, "AdministrationID", "AdministrationName"), "--изберете--", new { @class = "form-control col-md-10" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <button type="submit" class="btn btn-info col-md-12" onclick="return confirm('Сигурни ли сте, че искате да издадете нов сертификат за този потребител?')">Издай</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("Delete", null, new { userId = Model.Id }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="panel panel-info">
        <div class="panel-heading">Изтриване на погрешно създаден потребител, който още не е работил</div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-3">
                    <button type="submit" class="btn btn-danger col-md-12" onclick="return confirm('Сигурни ли сте, че искате да изтриете потребителя?')">Изтриване</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
