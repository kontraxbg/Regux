@model Kontrax.Regux.Model.Administration.AdministrationEditModel

@{
    ViewBag.Title = "Редактиране на администрация";
}

@section Subtitle {
    @Html.ActionLink("Назад към списъка с администрации", "Index")
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="panel panel-info">
        <div class="panel-heading"></div>
        <div class="panel-body">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ParentId, new SelectList(Model.Administrations, "Id", "Name"), "няма", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProposedCertificate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="input-group">
                            <input type="text" placeholder="Изберете файл..." disabled class="form-control filePlaceholder" />
                            <div class="input-group-btn">
                                <div class="fileUpload btn btn-primary btn-small">
                                    <span class="glyphicon glyphicon-folder-open"></span>
                                    <input type="file" class="upload" name="proposedCertificateFile" />
                                </div>
                            </div>
                        </div>
                        <file-upload name="files"></file-upload>
                        <span asp-validation-for="ProposedCertificate" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProposedCertificatePassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProposedCertificatePassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProposedCertificatePassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="row">
                            <div class="col-md-3">
                                <button type="submit" class="btn btn-primary col-md-12">Запис</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
