@model Kontrax.Regux.Model.Administration.AdministrationEditModel

@{
    ViewBag.Title = "Редактиране на " + Model.Name;
}

@section Subtitle {
    @Html.ActionLink(Model.IsPublicServiceProvider ? "Назад към данните на доставчика на обществени услуги" : "Назад към данните на администрацията", "Details", new { id = Model.Id })
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, null, new { @class = "text-danger" })
    <div class="panel panel-info form-horizontal">
        <div class="panel-heading"></div>
        <div class="panel-body">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @* Само администрациите имат видове. *@
                @if (!Model.IsPublicServiceProvider)
                {
                    @Html.LabelFor(model => model.KindCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.KindCode, new SelectList(Model.Kinds, "Code", "Name"), "(неуточнен)", new { @class = "form-control select2-search-select" })
                        @Html.ValidationMessageFor(model => model.KindCode, null, new { @class = "text-danger" })
                    </div>
                }
                else
                {
                    <div class="col-md-6"></div>
                }
                @Html.LabelFor(model => model.Uic, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Uic, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Uic, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.IsClosed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.IsClosed, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsClosed, null, new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Oid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Oid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Oid, null, new { @class = "text-danger" })
                </div>
            </div>
            <button type="submit" class="btn btn-primary col-md-2">Запис</button>
        </div>
    </div>
}

<div class="panel panel-info">
    @if (Model.IsPublicServiceProvider)
    {
        <div class="panel-heading">Изтриване на погрешно създаден доставчик на обществени услуги, който още не е използван</div>
    }
    else
    {
        <div class="panel-heading">Изтриване на погрешно създадена администрация, която още не е използвана</div>
    }
    <div class="panel-body">
        @using (Html.BeginForm("Delete", null, new { id = Model.Id, psp = Model.IsPublicServiceProvider }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, null, new { @class = "text-danger" })
            <button type="submit" class="btn btn-danger col-md-2" onclick="return confirm('Сигурни ли сте, че искате да изтриете @(Model.IsPublicServiceProvider ? "доставчика на обществени услуги" : "администрациията")?')">Изтриване</button>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
