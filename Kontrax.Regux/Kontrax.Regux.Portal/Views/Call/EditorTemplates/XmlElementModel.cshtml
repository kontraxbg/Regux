@model Kontrax.Regux.Model.Call.XmlElementModel

@Html.HiddenFor(model => model.QName)

@if (Model.IsSimpleType)
{
    <div class="form-group">
        <label class="col-md-4">@Html.DisplayFor(model => model.Title)</label>
        <div class="col-md-6">
            @for (int i = 0; i < Model.Values.Length; i++)
            {
                @Html.EditorFor(model => model.Values[i], new { htmlAttributes = new { @class = "form-control" } })
            }
        </div>
        <span class="col-md-2 control-label">
            @Html.DisplayFor(model => model.MultiplicitySymbol)
            @Html.DisplayFor(model => model.TypeTitle)
        </span>
    </div>
}
else
{
    <div class="panel panel-info">
        <div class="panel-heading clearfix">
            @Html.DisplayFor(model => model.Title)
            <div class="pull-right">
                @Html.DisplayFor(model => model.MultiplicitySymbol)
                @Html.DisplayFor(model => model.TypeTitle)
            </div>
        </div>
        <div class="panel-body">
            @for (int i = 0; i < Model.Children.Length; i++)
            {
                <div class="col-md-offset-1 col-md-11">
                    @Html.EditorFor(model => model.Children[i], new { htmlAttributes = new { @class = "form-control" } })
                </div>
            }
        </div>
    </div>
}
